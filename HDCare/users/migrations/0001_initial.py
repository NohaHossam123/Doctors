# Generated by Django 2.1 on 2020-05-31 21:01

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('username', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=25, null=True)),
                ('phone', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator(message='Sorry, Only Egyptian Phones are allowed...', regex='^(01)[012][0-9]{8}')])),
                ('city', models.CharField(blank=True, choices=[('Cairo', 'Cairo'), ('Giza', 'Giza'), ('Alexandria', 'Alexandria'), ('Kafr El Sheikh', 'Kafr El Sheikh'), ('Ismailia', 'Ismailia'), ('Frontier governorates', 'Frontier governorates'), ('Gharbia', 'Gharbia'), ('Dakahlia', 'Dakahlia'), ('Monufia', 'Monufia'), ('Damietta', 'Damietta'), ('Suez', 'Suez'), ('Port Said', 'Port Said'), ('Qalyubia', 'Qalyubia'), ('Sharqia', 'Sharqia'), ('Beheira', 'Beheira'), ('Aswan', 'Aswan'), ('Qena', 'Qena'), ('Faiyum', 'Faiyum'), ('Minya', 'Minya'), ('Sohag', 'Sohag'), ('Asyut', 'Asyut'), ('Beni Suef', 'Beni Suef'), ('Luxor', 'Luxor')], max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
